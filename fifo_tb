`timescale     1 ps/ 1 ps
`define          DELAY 20 
module     tb_fifo_32;  
// 4. Parameter definitions  
parameter     ENDTIME      = 400000; 
  parameter data_width=64,
    		fifo_depth=1024;
  			
// 5. DUT Input regs  
reg     clk;  
reg     rst_n;  
reg     wr;  
reg     rd;  
  reg     [data_width-1:0] data_in;  
// 6. DUT Output wires  
  wire     [data_width-1:0] data_out;  
wire     fifo_empty;  
wire     fifo_full;  
wire     fifo_threshold;  
wire     fifo_overflow;  
wire     fifo_underflow;  
integer i;  
// 7. DUT Instantiation
// fpga4student.com: FPga projects, Verilog projects, VHDL projects  
fifo_mem tb (/*AUTOARG*/  
   // Outputs  
   data_out, fifo_full, fifo_empty, fifo_threshold, fifo_overflow,   
   fifo_underflow,   
   // Inputs  
   clk, rst_n, wr, rd, data_in  
   );  
// 8. Initial Conditions  
initial  
      begin  
           clk     = 1'b0;  
           rst_n     = 1'b0;  
           wr     = 1'b0;  
           rd     = 1'b0;  
           data_in     = 64'd0;  
      end  
// 9. Generating Test Vectors  
initial  
      begin  
           main;  
      end  
task main;  
      fork  
           clock_generator;  
           reset_generator;  
           operation_process;  
           //debug_fifo;  
         //  endsimulation;  
      join  
endtask  
task clock_generator;  
      begin  
           forever #`DELAY clk = !clk;  
      end  
endtask  
task reset_generator;  
      begin  
           #(`DELAY*2)  
           rst_n = 1'b1;  
           # 7.9  
           rst_n = 1'b0;  
           # 7.09  
           rst_n = 1'b1;  
      end  
endtask  
task operation_process;  
      begin  
        for (i = 0; i < fifo_depth; i = i + 1)
          begin: WRE  
            #(`DELAY*2)  
                wr = 1'b1;  
                 rd = 1'b0;
                data_in = data_in + 32'd1;  
               // #(`DELAY*2)  
               // wr = 1'b0;  
           end  
           #(`DELAY)  
        for (i = 0; i < fifo_depth; i = i + 1)
          begin: RDE  
            #(`DELAY*2)  
                rd = 1'b1;  
                wr = 1'b0;  
              //  #(`DELAY*2)  
              //  rd = 1'b0;  
           end  
          $stop;
      end  
endtask  
// 10. Debug fifo  
task debug_fifo;  
      begin  
           $display("----------------------------------------------");  
           $display("------------------   -----------------------");  
           $display("----------- SIMULATION RESULT ----------------");  
           $display("--------------       -------------------");  
           $display("----------------     ---------------------");  
           $display("----------------------------------------------");  
           $monitor("TIME = %d, wr = %b, rd = %b, data_in = %h",$time, wr, rd, data_in);  
      end  
endtask  
   initial begin
     $dumpfile("file.vcd");
     $dumpvars;
   end
endmodule 
